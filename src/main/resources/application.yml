# JPA와 HIBERNATE - https://annajin.tistory.com/192
# DDL, DML, DCL - https://velog.io/@ksk5401/DDL-DML-DCL-%EC%9D%B4%EB%9E%80
server:
  port: 8080

application:
  version: AppVersion 1.0.0
  title: thejoeun company

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 762956005956-t6pvapdm1mi3134ilqeabioul71o1ish.apps.googleusercontent.com
            client-secret: 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
            redirect-url: http://localhost:8080/login/oauth2/code/google
            scope:
              - email
              - profile
    user:
      name: user
      password: 1234
  thymeleaf:
    cache: false
  sql:
    init:
      mode: always
  datasource:
#    generate-unique-name: false
#    url: jdbc:h2:tcp://localhost/~/jpashop
#    url: jdbc:h2:mem:testdb
#    driver-class-name: org.h2.Driver
#    username: sa
#    password:
#    initialization-mode: always
#    url: jdbc:mysql://localhost:3306/mydb         # mysql
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    username: root
#    password: 1234
    url: jdbc:mariadb://localhost:3306/Mydb         # mariadb
    driver-class-name: org.mariadb.jdbc.Driver
    username: root
    password: 1234
#    url: jdbc:oracle:thin:@localhost:1521:xe         # oracle
#    driver-class-name: oracle.jdbc.OracleDriver
#    username:
#    password:
  h2:
    console:
      path: /h2-console
      enabled: true
  jpa:
    show-sql: true
    defer-datasource-initialization: true # data.sql 사용을 위해서 필수적으로 등록
    properties:
      hibernate:
        format_sql: true  # sql문 pretty하게 보여줌
    generate-ddl: true # JPA는 DB 스키마를 자동으로 생성하는 기능을 지원한다.
#    generate-ddl이 true라면 @Entity 객체를 근거로 서버 시작 시점에 DDL 문을 생성하여 DB에 적용한다.
    hibernate:
      ddl-auto: create # create, create-drop, update, validate, none
#      create => spring boot 처음 실행시에 Entity로 된 클래스 및 테이블을 drop하고 create함.
#      create-drop => spring boot처음 실행시에 Entity로 된 클래스 및 테이블을 drop하고 create하고 springboot종료시에 다시 drop
#      update => 연결된 db schema와 자바 entity와 비교를 하여 다른 게 있다면 다른 것만 ddl 코드를 생성
#      validate => ddl구문을 만들진 않고 연결된 db schema와 자바 entity와 비교하여 다른 것이 있으면 오류코드만 보여줌
#      none => ddl구문을 만들지 않음.

  mvc:
    view:
      prefix: /WEB-INF/view/
      suffix: .jsp
  devtools:
    livereload:
      enabled: true

#logging:
#  level:
#    org:
#      hibernate:
#        orm:
#          jdbc:
#            bind: trace
#        SQL: debug
#    root: trace


